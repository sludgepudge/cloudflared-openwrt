name: Check new version

on:
  schedule:
    - cron: "0 */12 * * *"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  check:
    name: Check and Update Version
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure we fetch all tags
          token: ${{ secrets.PAT }}  # Use PAT for authenticated access

      - name: Fetch latest Cloudflare release
        id: cf_version
        run: |
          latest_version=$(curl -sL --retry 3 "https://api.github.com/repos/cloudflare/cloudflared/releases/latest" | jq -r '.tag_name')
          if [ -z "$latest_version" ] || [ "$latest_version" = "null" ]; then
            echo "Failed to fetch version or invalid response"
            exit 1
          fi
          echo "Latest Cloudflared version: $latest_version"
          echo "new_version=$latest_version" >> $GITHUB_ENV

      - name: Check if tag already exists
        id: check_tag
        run: |
          if git rev-parse "$new_version" >/dev/null 2>&1; then
            echo "Tag already exists: $new_version"
            echo "update_needed=false" >> $GITHUB_ENV
          else
            echo "update_needed=true" >> $GITHUB_ENV
          fi

      - name: Update Repository
        if: env.update_needed == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git commit --allow-empty -m "chore(release): $new_version"
          git tag -a "$new_version" -m "Release $new_version"
          git push origin main --tags
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
